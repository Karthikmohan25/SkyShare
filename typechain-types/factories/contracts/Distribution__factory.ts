/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Distribution,
  DistributionInterface,
} from "../../contracts/Distribution";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fSkyToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dust",
        type: "uint256",
      },
    ],
    name: "DistributionCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DustWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "RentDeposited",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "rounds",
        type: "uint256[]",
      },
    ],
    name: "claimMultipleRounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "claimPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositRent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "distributions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dustRemaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fSkyToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "getClaimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getUnclaimedRounds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDustAccumulated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDust",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516110f53803806110f583398101604081905261002f916100ea565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161007e565b5050600180556001600160a01b031660805261011d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e557600080fd5b919050565b600080604083850312156100fd57600080fd5b610106836100ce565b9150610114602084016100ce565b90509250929050565b608051610faf610146600039600081816102380152818161062801526108790152610faf6000f3fe6080604052600436106100e85760003560e01c80638a19c8bc1161008a578063cfb550f111610059578063cfb550f1146102e6578063e3473d16146102fb578063eec361f514610311578063f2fde38b1461031957600080fd5b80638a19c8bc146102725780638da5cb5b14610288578063b3743f60146102a6578063c63fdcc7146102c657600080fd5b80634dd6c8de116100c65780634dd6c8de146101a95780636f9fb98a146101f4578063715018a614610211578063741acae51461022657600080fd5b806318a4e8bb146100ed5780631bab1f7e1461010f5780634487d3df14610145575b600080fd5b3480156100f957600080fd5b5061010d610108366004610d50565b610339565b005b34801561011b57600080fd5b5061012f61012a366004610de1565b6103ee565b60405161013c9190610e03565b60405180910390f35b34801561015157600080fd5b50610189610160366004610e47565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b60408051948552602085019390935291830152606082015260800161013c565b3480156101b557600080fd5b506101e46101c4366004610e60565b600360209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161013c565b34801561020057600080fd5b50475b60405190815260200161013c565b34801561021d57600080fd5b5061010d61056c565b34801561023257600080fd5b5061025a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161013c565b34801561027e57600080fd5b5061020360045481565b34801561029457600080fd5b506000546001600160a01b031661025a565b3480156102b257600080fd5b506102036102c1366004610e60565b610580565b3480156102d257600080fd5b5061010d6102e1366004610e47565b6106db565b3480156102f257600080fd5b5061010d6106e7565b34801561030757600080fd5b5061020360055481565b61010d61082d565b34801561032557600080fd5b5061010d610334366004610de1565b610a7d565b60005b818110156103e9573360009081526003602052604081209084848481811061036657610366610e8a565b602090810292909201358352508101919091526040016000205460ff161580156103b1575060006103af338585858181106103a3576103a3610e8a565b90506020020135610580565b115b156103d7576103d78383838181106103cb576103cb610e8a565b90506020020135610ab8565b806103e181610eb6565b91505061033c565b505050565b6060600060045467ffffffffffffffff81111561040d5761040d610ecf565b604051908082528060200260200182016040528015610436578160200160208202803683370190505b509050600060015b60045481116104c7576001600160a01b038516600090815260036020908152604080832084845290915290205460ff16158015610484575060006104828683610580565b115b156104b5578083838151811061049c5761049c610e8a565b6020908102919091010152816104b181610eb6565b9250505b806104bf81610eb6565b91505061043e565b5060008167ffffffffffffffff8111156104e3576104e3610ecf565b60405190808252806020026020018201604052801561050c578160200160208202803683370190505b50905060005b828110156105635783818151811061052c5761052c610e8a565b602002602001015182828151811061054657610546610e8a565b60209081029190910101528061055b81610eb6565b915050610512565b50949350505050565b610574610ca9565b61057e6000610cd6565b565b6000811580610590575060045482115b806105be57506001600160a01b038316600090815260036020908152604080832085845290915290205460ff165b156105cb575060006106d5565b60008281526002602081815260408084208151608081018352815481526001820154938101939093529283015482820152600390920154606082015290516370a0823160e01b81526001600160a01b0386811660048301529192917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561066f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106939190610ee5565b90508015806106a457506020820151155b156106b4576000925050506106d5565b602082015182516106c6908390610efe565b6106d09190610f2b565b925050505b92915050565b6106e481610ab8565b50565b6106ef610ca9565b6005548061073a5760405162461bcd60e51b81526020600482015260136024820152724e6f206475737420746f20776974686472617760681b60448201526064015b60405180910390fd5b6000600581905580546040516001600160a01b039091169083908381818185875af1925050503d806000811461078c576040519150601f19603f3d011682016040523d82523d6000602084013e610791565b606091505b50509050806107db5760405162461bcd60e51b8152602060048201526016602482015275111d5cdd081dda5d1a191c985dd85b0819985a5b195960521b6044820152606401610731565b6000546001600160a01b03166001600160a01b03167f1a196790e94751831fb9ca8c3f72d91d761b8d6815921535b5d8545d72f07bb18360405161082191815260200190565b60405180910390a25050565b600034116108755760405162461bcd60e51b81526020600482015260156024820152744e6f2072656e7420746f206469737472696275746560581b6044820152606401610731565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190610ee5565b90506000811161093e5760405162461bcd60e51b815260206004820152601060248201526f4e6f20746f6b656e20686f6c6465727360801b6044820152606401610731565b6004805490600061094e83610eb6565b91905055506000600554346109639190610f3f565b600060058190559091506109778383610f52565b905060006109858284610f66565b6040805160808101825282815260208082018881524283850190815260608401888152600454600090815260029485905295862094518555915160018501555191830191909155516003909101556005805492935084929091906109ea908490610f3f565b909155505060045460405133917ff335f24c222716a32e307b843fe125d20c7fd660660a5538ded173c33ac219b391610a2b91348252602082015260400190565b60405180910390a260045460408051838152602081018790529081018490527f116aa83d96a6d02ef97d0d1713e1dbbb088f1e3cb8652f0b89e1572acc801b449060600160405180910390a250505050565b610a85610ca9565b6001600160a01b038116610aaf57604051631e4fbdf760e01b815260006004820152602401610731565b6106e481610cd6565b610ac0610d26565b600081118015610ad257506004548111155b610b0e5760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606401610731565b33600090815260036020908152604080832084845290915290205460ff1615610b6b5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610731565b6000610b773383610580565b905060008111610bbc5760405162461bcd60e51b815260206004820152601060248201526f4e6f7468696e6720746f20636c61696d60801b6044820152606401610731565b336000818152600360209081526040808320868452909152808220805460ff191660011790555190919083908381818185875af1925050503d8060008114610c20576040519150601f19603f3d011682016040523d82523d6000602084013e610c25565b606091505b5050905080610c675760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b6044820152606401610731565b604051828152839033907fe382930a1e1c9d4208204fa93e9089518e327044527d4428dbe71c8f812d0dbe9060200160405180910390a350506106e460018055565b6000546001600160a01b0316331461057e5760405163118cdaa760e01b8152336004820152602401610731565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610d4957604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b60008060208385031215610d6357600080fd5b823567ffffffffffffffff80821115610d7b57600080fd5b818501915085601f830112610d8f57600080fd5b813581811115610d9e57600080fd5b8660208260051b8501011115610db357600080fd5b60209290920196919550909350505050565b80356001600160a01b0381168114610ddc57600080fd5b919050565b600060208284031215610df357600080fd5b610dfc82610dc5565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610e3b57835183529284019291840191600101610e1f565b50909695505050505050565b600060208284031215610e5957600080fd5b5035919050565b60008060408385031215610e7357600080fd5b610e7c83610dc5565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ec857610ec8610ea0565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ef757600080fd5b5051919050565b80820281158282048414176106d5576106d5610ea0565b634e487b7160e01b600052601260045260246000fd5b600082610f3a57610f3a610f15565b500490565b808201808211156106d5576106d5610ea0565b600082610f6157610f61610f15565b500690565b818103818111156106d5576106d5610ea056fea26469706673582212203401ccdc037019d849b2be14ce650d08aab89dbc033906e0311d14b3658f37ba64736f6c63430008140033";

type DistributionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Distribution__factory extends ContractFactory {
  constructor(...args: DistributionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _fSkyToken: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_fSkyToken, _owner, overrides || {});
  }
  override deploy(
    _fSkyToken: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_fSkyToken, _owner, overrides || {}) as Promise<
      Distribution & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Distribution__factory {
    return super.connect(runner) as Distribution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributionInterface {
    return new Interface(_abi) as DistributionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Distribution {
    return new Contract(address, _abi, runner) as unknown as Distribution;
  }
}
